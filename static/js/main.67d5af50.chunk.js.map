{"version":3,"sources":["GlobalStyle.js","components/Player.js","components/Board.js","components/Status.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","PlayerItem","isTurn","Player","props","className","isFirstTurn","BoardContainer","Cell","button","marker","cellBgColor","Board","tableArray","map","element","index","onClick","victoryPlayer","disabled","StatusContainer","Message","p","ButtonContainer","RestartButton","Status","victoryList","Wrapper","main","Inner","Title","h1","App","useState","setIsFirstTurn","Array","fill","setTableArray","setVictoryPlayer","newTableArray","newArray","slice","addMarker","prevIsFirstTurn","forEach","victoryListItem","marker1","marker2","victoryOrDefeatCheck","allCellMarked","some","value","checkDraw","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67d5af50.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;\n    line-height: 1.5;\n  }\n  body {\n    font-family: inherit;\n    line-height: inherit;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 1.25rem;\n`;\n\nconst PlayerItem = styled.div`\n  width: 50%;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n  border-width: ${({ isTurn }) => (isTurn ? \"0 0 3px\" : \"0\")};\n  &.firstPlayer {\n    color: rgb(4, 120, 87);\n    border-style: solid;\n    border-color: rgb(4, 120, 87);\n  }\n  &.secondPlayer {\n    color: rgb(124, 58, 237);\n    border-style: solid;\n    border-color: rgb(124, 58, 237);\n  }\n`;\n\nconst Player = (props) => {\n  return (\n    <Container>\n      <PlayerItem className=\"firstPlayer\" isTurn={props.isFirstTurn}>\n        O\n      </PlayerItem>\n      <PlayerItem className=\"secondPlayer\" isTurn={!props.isFirstTurn}>\n        X\n      </PlayerItem>\n    </Container>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BoardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 0.5rem;\n  margin-bottom: 2.5rem;\n`;\n\nconst Cell = styled.button`\n  background-color: rgb(229, 231, 235);\n  border: 0 solid #e5e7eb;\n  border-radius: 0.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 5rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n  width: 5rem;\n  transition-property: background-color, border-color, color, fill, stroke,\n    opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\n  transition-property: background-color, border-color, color, fill, stroke,\n    opacity, box-shadow, transform, filter, backdrop-filter;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.15s;\n  &:hover {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n  &[disabled] {\n    cursor: not-allowed;\n    color: rgb(255, 255, 255);\n    ${({ marker }) => cellBgColor(marker)};\n  }\n`;\n\nconst cellBgColor = (marker) => {\n  if (marker === \"O\") {\n    return `\n    background-color: rgb(4, 120, 87);\n    `;\n  } else if (marker === \"X\") {\n    return `\n    background-color: rgb(124, 58, 237);\n    `;\n  } else {\n    return `\n    background-color: rgb(107, 114, 128);\n    `;\n  }\n};\n\nconst Board = (props) => {\n  return (\n    <BoardContainer>\n      {props.tableArray.map((element, index) => {\n        const marker = props.tableArray[index];\n        return (\n          <Cell\n            onClick={() =>\n              props.onClick(\n                props.tableArray,\n                props.isFirstTurn,\n                index,\n                props.victoryPlayer\n              )\n            }\n            disabled={marker || props.victoryPlayer}\n            marker={marker}\n            key={index}\n          >\n            {marker}\n          </Cell>\n        );\n      })}\n    </BoardContainer>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StatusContainer = styled.div``;\nconst Message = styled.p`\n  text-align: center;\n  margin-bottom: 0.75rem;\n`;\nconst ButtonContainer = styled.div`\n  text-align: center;\n`;\n\nconst RestartButton = styled.button`\n  color: rgb(255, 255, 255);\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  padding-left: 3.5rem;\n  padding-right: 3.5rem;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 0.25rem;\n  background-color: rgb(60, 60, 60);\n  cursor: pointer;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.15s;\n  border: 0 solid #e5e7eb;\n  &:hover {\n    background-color: rgb(40, 40, 40);\n  }\n`;\n\nconst showStatus = (victoryPlayer) => {\n  if (victoryPlayer === null) {\n    return \"starting...\";\n  } else if (victoryPlayer === \"draw\") {\n    return `Draw`;\n  } else {\n    return `${victoryPlayer} is Win`;\n  }\n};\n\nconst Status = (props) => {\n  return (\n    <StatusContainer>\n      <Message>{showStatus(props.victoryPlayer)}</Message>\n      <ButtonContainer>\n        <RestartButton onClick={props.onClick}>RESTART</RestartButton>\n      </ButtonContainer>\n    </StatusContainer>\n  );\n};\n\nexport default Status;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport Player from \"./components/Player\";\nimport Board from \"./components/Board\";\nimport Status from \"./components/Status\";\n\nconst victoryList = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst Wrapper = styled.main`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  &:after {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    position: absolute;\n    width: 200%;\n    height: 100%;\n    background: linear-gradient(\n      90deg,\n      rgba(4, 120, 87, 0.3) 50%,\n      rgba(124, 58, 237, 0.3) 50%\n    );\n    transition: 0.2s ease-out;\n    top: 0;\n    left: ${({ isFirstTurn }) => (isFirstTurn ? \"0\" : \"-100%\")};\n  }\n`;\n\nconst Inner = styled.div`\n  width: 16rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  color: rgb(20, 20, 20);\n  text-align: center;\n  margin-bottom: 1.25rem;\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n  font-weight: 700;\n`;\n\nconst App = () => {\n  const [isFirstTurn, setIsFirstTurn] = useState(true);\n  const [tableArray, setTableArray] = useState(new Array(9).fill(null));\n  const [victoryPlayer, setVictoryPlayer] = useState(null);\n\n  // リセット\n  const reset = () => {\n    setIsFirstTurn(true);\n    setTableArray(new Array(9).fill(null));\n    setVictoryPlayer(null);\n  };\n\n  // 次のターンに移る\n  const changeTurn = () => {\n    setIsFirstTurn((prevIsFirstTurn) => !prevIsFirstTurn);\n  };\n\n  // 配列にマーカーを追加\n  const addMarker = (tableArray, isFirstTurn, index) => {\n    const newArray = tableArray.slice();\n    newArray[index] = isFirstTurn ? \"O\" : \"X\";\n    return newArray;\n  };\n\n  // 勝敗チェック\n  const victoryOrDefeatCheck = (tableArray) => {\n    let victoryPlayer = null;\n    victoryList.forEach((victoryListItem) => {\n      const [marker1, marker2, marker3] = [\n        tableArray[victoryListItem[0]],\n        tableArray[victoryListItem[1]],\n        tableArray[victoryListItem[2]],\n      ];\n\n      if (marker1 === marker2 && marker2 === marker3 && marker1 !== null) {\n        victoryPlayer = marker1;\n        setVictoryPlayer(victoryPlayer);\n      }\n    });\n  };\n\n  // 引き分け判定\n  const checkDraw = (tableArray, victoryPlayer) => {\n    if (victoryPlayer !== null) {\n      return;\n    }\n    const allCellMarked = !tableArray.some((value) => value === null);\n    if (victoryPlayer === null && allCellMarked) {\n      setVictoryPlayer(\"draw\");\n    }\n  };\n\n  const onClick = (tableArray, isFirstTurn, index, victoryPlayer) => {\n    const newTableArray = addMarker(tableArray, isFirstTurn, index);\n    setTableArray(newTableArray);\n    changeTurn(isFirstTurn);\n    victoryOrDefeatCheck(newTableArray);\n    checkDraw(newTableArray, victoryPlayer);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper isFirstTurn={isFirstTurn}>\n        <Inner>\n          <Title>TIC TAC TOE</Title>\n          <Player isFirstTurn={isFirstTurn} />\n          <Board\n            victoryPlayer={victoryPlayer}\n            isFirstTurn={isFirstTurn}\n            tableArray={tableArray}\n            onClick={onClick}\n          />\n          <Status victoryPlayer={victoryPlayer} onClick={reset} />\n        </Inner>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}